PACKAGE base

DATA FindResult ==
  CONS Found
  CONS NotFound

DATA CmpResult ==
  CONS LT
  CONS EQ
  CONS GT

DATA Bool ==
  CONS False
  CONS True

DATA Maybe a ==
  CONS Nothing
  CONS Just fromJust=a

DEFINE int-compare ==
  { We now have the following on the stack a b. Return 0 if a == b, -1 if a < b, 1 if a > b }
  [ DUP ] DIP SWAP { copy the a b in order to the top of the stack }
  [ DUP ] DIP SWAP
  [ == ]
  [ ZAP ZAP EQ]
  [
    { Now we have a b in order on top of the stack }
    [ < ]
    [ LT ]
    [ GT ]
    IFTE
  ]
  IFTE

DEFINE max ==
  [ [ DUP ] DIP SWAP
    [ DUP ] DIP SWAP
    > ]
  [ ZAP ]
  [ [ ZAP ] DIP ]
  IFTE

{
DEFINE replicate-n ==
  [ [ DUP 0 == ] DIP SWAP ]
  [ ZAP ZAP ]
  [ [ -1 + ] DIP
    DUP
    [ SWAP [ I ] DIP ] DIP ]
  IFTE}